/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define NAV 1
#define SYM 2
#define NUM 3
#define NAVNUM 4
#define CTAB 5

#define MORPH(NAME, MOD, BINDING1, BINDING2) \
        NAME: NAME { \
                compatible = "zmk,behavior-mod-morph"; \
                #binding-cells = <0>; \
                bindings = <BINDING1>, <BINDING2>; \
                mods = <(MOD)>; \
        };

/ {
        macros {
                lm: lm {
                        compatible = "zmk,behavior-macro-two-param";
                        wait-ms = <0>;
                        tap-ms = <0>;
                        #binding-cells = <2>;
                        bindings
                                = <&macro_param_1to1>
                                , <&macro_press &mo MACRO_PLACEHOLDER>
                                , <&macro_param_2to1>
                                , <&macro_press &kp MACRO_PLACEHOLDER>
                                , <&macro_pause_for_release>
                                , <&macro_param_2to1>
                                , <&macro_release &kp MACRO_PLACEHOLDER>
                                , <&macro_param_1to1>
                                , <&macro_release &mo MACRO_PLACEHOLDER>
                                ;
                };
                ctab: ctab {
                        compatible = "zmk,behavior-macro";
                        wait-ms = <0>;
                        tap-ms = <0>;
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL>
                                , <&macro_tap &kp TAB &to CTAB>
                                ;
                };
                cnav: cnav {
                        compatible = "zmk,behavior-macro";
                        wait-ms = <0>;
                        tap-ms = <0>;
                        #binding-cells = <0>;
                        bindings
                                = <&macro_tap &to NAV>
                                , <&macro_pause_for_release>
                                , <&macro_release &kp LCTRL>
                                , <&macro_tap &to BASE>
                                ;
                };
        };

        behaviors {
                MORPH(M_N1, MOD_RGUI, &kp M, &kp N1)
                MORPH(COMMA_N2, MOD_RGUI, &kp COMMA, &kp N2)
                MORPH(DOT_N3, MOD_RGUI, &kp DOT, &kp N3)
                MORPH(J_N4, MOD_RGUI, &kp J, &kp N4)
                MORPH(K_N5, MOD_RGUI, &kp K, &kp N5)
                MORPH(L_N6, MOD_RGUI, &kp L, &kp N6)
                MORPH(SEMI_N0, MOD_RGUI, &kp SEMI, &kp N0)
                MORPH(U_N7, MOD_RGUI, &kp U, &kp N7)
                MORPH(I_N8, MOD_RGUI, &kp I, &kp N8)
                MORPH(O_N9, MOD_RGUI, &kp O, &kp N9)
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
      &kp TAB       &kp Q         &kp W         &kp E         &kp R         &kp T             &kp Y         &U_N7         &I_N8         &O_N9         &kp P         &kp BSPC
// ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
      &mt LCTRL ESC &kp A         &kp S         &kp D         &kp F         &kp G             &kp H         &J_N4         &K_N5         &L_N6         &SEMI_N0      &kp RET
// ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
      &kp LSHFT     &kp Z         &kp X         &kp C         &kp V         &kp B             &kp N         &M_N1         &COMMA_N2     &DOT_N3       &kp FSLH      &kp RSHFT
// ╰─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╯
                                                &cnav         &kp SPACE     &kp LGUI          &mo NUM       &mo SYM       &kp RALT
//                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                        >;
                };

                navigation_layer {
                        bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
      &ctab         &trans        &kp LA(LG(W)) &kp UP        &trans        &trans            &kp LA(LG(Y)) &kp LA(LG(U)) &kp LA(LG(I)) &kp LA(LG(O)) &kp LA(LG(P))    &kp LA(BSPC)
// ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
      &trans        &trans        &trans        &kp LEFT      &kp RIGHT     &kp C_VOL_UP      &kp LA(LG(H)) &kp LA(LG(J)) &kp LA(LG(K)) &kp LA(LG(L)) &kp LA(LG(SEMI)) &kp LA(RET)
// ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
      &trans        &trans        &trans        &trans        &kp DOWN      &kp C_VOL_DN      &kp LA(LG(N)) &kp LA(LG(M)) &kp LA(LG(COMMA)) &kp LA(LG(DOT)) &kp LA(LG(FSLH)) &trans
// ╰─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╯
                                                &trans        &trans        &trans            &mo NAVNUM    &lm SYM LALT  &kp LALT
//                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                        >;
                };

                symbol_layer {
                        bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
      &trans        &kp EXCL      &kp AT        &kp HASH      &kp AMPS      &trans            &trans        &kp LBKT      &kp RBKT      &kp DQT       &kp TILDE     &trans
// ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
      &trans        &kp PRCNT     &kp PLUS      &kp MINUS     &kp EQUAL     &trans            &trans        &kp LPAR      &kp RPAR      &kp SQT       &kp PIPE      &trans
// ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
      &trans        &kp CARET     &kp ASTRK     &kp UNDER     &kp DLLR      &trans            &trans        &kp LBRC      &kp RBRC      &kp GRAVE     &kp BSLH      &trans
// ╰─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╯
                                                &kp LALT      &trans        &trans            &none         &none         &none
//                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                        >;
                };

                number_layer {
                        bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
      &kp RG(TAB)   &kp RG(Q)     &kp RG(W)     &kp RG(E)     &kp RG(R)     &kp RG(T)         &trans        &kp N7        &kp N8        &kp N9        &trans        &trans
// ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
      &kp RG(LCTRL) &kp RG(A)     &kp RG(S)     &kp RG(D)     &kp RG(F)     &kp RG(G)         &trans        &kp N4        &kp N5        &kp N6        &kp N0        &trans
// ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
      &kp RG(LSHFT) &kp RG(Z)     &kp RG(X)     &kp RG(C)     &kp RG(V)     &kp RG(B)         &trans        &kp N1        &kp N2        &kp N3        &trans        &trans
// ╰─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╯
                                                &kp LALT      &trans        &mt LGUI RG(SPACE) &none         &none         &none
//                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                        >;
                };

                navnumber_layer {
                        bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
      &trans        &trans        &trans        &kp RG(UP)    &trans        &trans            &trans        &kp LA(N7)    &kp LA(N8)    &kp LA(N9)    &trans        &trans
// ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
      &trans        &trans        &trans        &kp RG(LEFT)  &kp RG(RIGHT) &trans            &trans        &kp LA(N4)    &kp LA(N5)    &kp LA(N6)    &kp LA(N0)    &trans
// ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
      &trans        &trans        &trans        &trans        &kp RG(DOWN)  &trans            &trans        &kp LA(N1)    &kp LA(N2)    &kp LA(N3)    &trans        &trans
// ╰─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╯
                                                &none         &none         &none             &none         &none         &none
//                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                        >;
                };

                ctab_layer {
                        bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
      &kp TAB       &trans        &trans        &trans        &trans        &trans            &trans        &trans        &trans        &trans        &trans        &trans
// ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
      &trans        &trans        &trans        &trans        &trans        &trans            &trans        &trans        &trans        &trans        &trans        &trans
// ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
      &trans        &trans        &trans        &trans        &trans        &trans            &trans        &trans        &trans        &trans        &trans        &trans
// ╰─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╯
                                                &trans        &trans        &trans            &none         &none         &none
//                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                        >;
                };
        };
};
