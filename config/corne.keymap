/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define SYM 1

#define SIMPLE_MORPH(NAME, MOD, BINDING1, BINDING2) \
    ZMK_MOD_MORPH(NAME, \
        mods = <(MOD)>; \
        bindings = <BINDING1>, <BINDING2>; \
    )

SIMPLE_MORPH(D_LEFT, MOD_LALT, &kp D, &kp LEFT)
SIMPLE_MORPH(F_RIGHT, MOD_LALT, &kp F, &kp RIGHT)
SIMPLE_MORPH(E_UP, MOD_LALT, &kp E, &kp UP)
SIMPLE_MORPH(V_DOWN, MOD_LALT, &kp V, &kp DOWN)

/ {
        macros {
                lm: lm {
                        compatible = "zmk,behavior-macro-two-param";
                        wait-ms = <0>;
                        tap-ms = <0>;
                        #binding-cells = <2>;
                        bindings
                                = <&macro_param_1to1>
                                , <&macro_press &mo MACRO_PLACEHOLDER>
                                , <&macro_param_2to1>
                                , <&macro_press &kp MACRO_PLACEHOLDER>
                                , <&macro_pause_for_release>
                                , <&macro_param_2to1>
                                , <&macro_release &kp MACRO_PLACEHOLDER>
                                , <&macro_param_1to1>
                                , <&macro_release &mo MACRO_PLACEHOLDER>
                                ;
                };
        };

        behaviors {
                // D_l: left_arrow {
                //         compatible = "zmk,behavior-mod-morph";
                //         #binding-cells = <0>;
                //         bindings = <&kp D>, <&kp LG(LEFT)>;
                //         mods = <(MOD_LALT)>;
                // };

                // F_r: right_arrow {
                //         compatible = "zmk,behavior-mod-morph";
                //         #binding-cells = <0>;
                //         bindings = <&kp F>, <&kp LG(RIGHT)>;
                //         mods = <(MOD_LALT)>;
                // };

                // E_u: up_arrow {
                //         compatible = "zmk,behavior-mod-morph";
                //         #binding-cells = <0>;
                //         bindings = <&kp E>, <&kp LG(UP)>;
                //         mods = <(MOD_LALT)>;
                // };

                // V_d: down_arrow {
                //         compatible = "zmk,behavior-mod-morph";
                //         #binding-cells = <0>;
                //         bindings = <&kp V>, <&kp LG(DOWN)>;
                //         mods = <(MOD_LALT)>;
                // };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
      &kp TAB       &kp Q         &kp W         &E_UP         &kp R         &kp T             &kp Y         &kp U         &kp I         &kp O         &kp P         &kp BSPC
// ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
      &mt LCTRL ESC &kp A         &kp S         &D_LEFT       &F_RIGHT      &kp G             &kp H         &kp J         &kp K         &kp L         &kp SEMI      &kp RET
// ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
      &kp LSHFT     &kp Z         &kp X         &kp C         &V_DOWN       &kp B             &kp N         &kp M         &kp COMMA     &kp DOT       &kp FSLH      &kp RSHFT
// ╰─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╯
                                                &kp LALT      &kp SPACE     &kp LGUI          &kp RGUI      &mo SYM       &kp RALT
//                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                        >;
                };

                symbol_layer {
                        bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
      &trans        &kp TILDE     &kp EXCL      &kp AT        &kp HASH      &trans            &trans        &kp LBKT      &kp RBKT      &kp GRAVE     &trans        &trans
// ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
      &trans        &kp PRCNT     &kp PLUS      &kp MINUS     &kp EQUAL     &trans            &trans        &kp LPAR      &kp RPAR      &kp SQT       &kp PIPE      &trans
// ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
      &trans        &kp CARET     &kp CARET     &kp UNDER     &kp DLLR      &trans            &trans        &kp LBRC      &kp RBRC      &kp DQT       &kp BSLH      &trans
// ╰─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤   ├─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╯
                                                &trans        &trans        &kp LGUI          &none         &none         &none
//                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
                        >;
                };
        };
};
